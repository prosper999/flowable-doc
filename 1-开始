什么是flowable？

Flowable是一个使用Java编写的轻量级的业务流程引擎. 它允许你去部署BPMN 2.0过程定义（定义过程的工业标准XML），通过这些流程的定义，创建流程实例，运行查询历史流程相关数据，以及更多。

Flowable在将其添加到应用程序/服务/体系结构时是非常灵活的。您可以通过将flowable的库作为jar来嵌入到应用程序或服务中。因为它是一个jar里，你可以把它随便到任何java环境：java SE；servlet容器，如Tomcat或Jetty，Spring,java EE服务器，如JBoss服务器，等等。或者您也可以使用flowable的REST API来通过HTTP进行通信。也有几个flowable的应用程序（Flowable Modeler、Flowable Admin、Flowable IDM和Flowable任务）提供了用于处理过程和任务的开箱即用示例。

Flowable的核心引擎公开API来管理和执行流程，可以看作是一系列的服务。
下面的各种教程从介绍如何设置和使用这个核心引擎开始。接下来的部分是根据前面章节中获得的知识建立的。

Flowable和Activiti
Flowable是Activiti的一个分支

建立一个命令行应用程序
1. 创建一个流程引擎
我们将要建立一个简单的例子，可以演示如何创建一个Flowable流程引擎，同时介绍一些关键点和如何通过API去运行。

我们建的这个实例是一个简单的假期申请流程

员工申请节假日

经理不是同意就是拒绝这个请求

我们将模拟在某个外部系统中注册请求并发送电子邮件给员工。

首先, 我们创建一个新的Maven工程，通过File → New → Other → Maven Project

我们只需要创建一个简单的工程(跳过 archetype selection)

并且填好'Group Id' 和 'Artifact id':

现在我们有了一个空的Maven工程了, 加上两个依赖:

Flowable流程引擎允许我们创建一个流程引擎实例和访问Flowable APIs.

在这里我们使用了一个H2内存数据库，作为Flowable引擎的存储器
注意，H2依赖性包括数据库和驱动程序。如果使用另一个数据库（例如PostgreSQL、MySQL等），则需要添加特定的数据库驱动程序依赖项。

加以下到你的pom.xml文件:
<dependencies>
  <dependency>
    <groupId>org.flowable</groupId>
    <artifactId>flowable-engine</artifactId>
    <version>6.3.0</version>
  </dependency>
  <dependency>
    <groupId>com.h2database</groupId>
    <artifactId>h2</artifactId>
    <version>1.3.176</version>
  </dependency>
</dependencies>
